"use strict";(self.webpackChunkheavenstudio_docs=self.webpackChunkheavenstudio_docs||[]).push([[376],{3905:(e,n,a)=>{a.d(n,{Zo:()=>p,kt:()=>g});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function l(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?l(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=t.createContext({}),c=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},p=function(e){var n=c(e.components);return t.createElement(s.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(a),m=r,g=u["".concat(s,".").concat(m)]||u[m]||d[m]||l;return a?t.createElement(g,i(i({ref:n},p),{},{components:a})):t.createElement(g,i({ref:n},p))}));function g(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[u]="string"==typeof e?e:r,i[1]=o;for(var c=2;c<l;c++)i[c]=a[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},3603:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var t=a(7462),r=(a(7294),a(3905));const l={},i="Types of Casing",o={unversionedId:"Guidelines/types-of-casing",id:"Guidelines/types-of-casing",title:"Types of Casing",description:"(Please note, that only a few of these are actually valid in C#, meaning you cannot use them.)",source:"@site/docs-api/Guidelines/1_types-of-casing.md",sourceDirName:"Guidelines",slug:"/Guidelines/types-of-casing",permalink:"/docs-api/Guidelines/types-of-casing",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Guidelines",permalink:"/docs-api/category/guidelines"},next:{title:"File Structure",permalink:"/docs-api/Guidelines/file_structure"}},s={},c=[{value:"Pascal Casing",id:"pascal-casing",level:2},{value:"Camel Casing",id:"camel-casing",level:2}],p={toc:c},u="wrapper";function d(e){let{components:n,...a}=e;return(0,r.kt)(u,(0,t.Z)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"types-of-casing"},"Types of Casing"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"var helloWorld;  // Camel Case\nvar hello_world; // Snake Case\nvar HelloWorld;  // Pascal Case\nvar Hello_World; // Cobra Case\nvar hello.world; // Dot Case       (Invalid)\nvar hello-world; // Dash Case      (Invalid)\nvar hello world; // Separate Words (Invalid)\nvar hello/world; // Slash Case     (Invalid)\n")),(0,r.kt)("p",null,"(Please note, that only a few of these are actually valid in C#, meaning you cannot use them.)"),(0,r.kt)("p",null,"In the following examples, any of the functions or members belonging to elements marked as ",(0,r.kt)("inlineCode",{parentName:"p"},"public")," is also applicable when working with ",(0,r.kt)("inlineCode",{parentName:"p"},"protected")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"internal")," elements, all of which are intended to be visible to external callers."),(0,r.kt)("h2",{id:"pascal-casing"},"Pascal Casing"),(0,r.kt)("p",null,"Use pascal casing (\u201cPascalCasing\u201d) when naming a ",(0,r.kt)("inlineCode",{parentName:"p"},"class")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"struct"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public class GameManager\n{\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public struct CustomTheme\n{\n}\n")),(0,r.kt)("p",null,"When naming an ",(0,r.kt)("inlineCode",{parentName:"p"},"interface"),", use pascal casing in addition to prefixing the name with an I. This indicates to other programmers that it\u2019s an ",(0,r.kt)("inlineCode",{parentName:"p"},"interface"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public interface IAnimal\n{\n}\n")),(0,r.kt)("p",null,"When naming ",(0,r.kt)("inlineCode",{parentName:"p"},"public")," members of types, such as fields, properties, events, methods, and local functions, use pascal casing."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public class Spaceball : MiniGame\n{\n    public bool IsSwinging;\n\n    public IBall ICurrentBall { get; set; }\n\n    public void Start()\n    {\n        // Code here\n    }\n}\n")),(0,r.kt)("h2",{id:"camel-casing"},"Camel Casing"),(0,r.kt)("p",null,'Use camel casing ("camelCasing") when naming ',(0,r.kt)("inlineCode",{parentName:"p"},"private")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"internal")," fields."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public class Conductor\n{\n    private float _songPosition;\n}\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Note: prefixing camel cased fields is optional. e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"_songPosition"),", but highly encouraged.")),(0,r.kt)("p",null,"When working with ",(0,r.kt)("inlineCode",{parentName:"p"},"static")," fields that are ",(0,r.kt)("inlineCode",{parentName:"p"},"private")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"internal"),", use the ",(0,r.kt)("inlineCode",{parentName:"p"},"s_")," prefix."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public class Conductor\n{\n    private static float s_songPosition;\n}\n")),(0,r.kt)("p",null,"When writing method parameters, use camel casing."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public T GenericMethod<T>(float someNum, bool onePieceReal)\n{\n}\n")))}d.isMDXComponent=!0}}]);